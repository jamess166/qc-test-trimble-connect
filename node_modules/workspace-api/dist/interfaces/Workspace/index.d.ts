/**
 * DISCLAIMER: This file contains the public interfaces and thus, upcoming changes should always be backwards-compatible.
 * It is only allowed to add new members.
 * DO NOT REMOVE existing members; instead, mark them as obsolete and create the new members.
 */
import { ProjectAPI, MarkupAPI, UIAPI, UserAPI, ViewAPI, ViewerAPI, ExtensionAPI, DataTableAPI, ModelsPanelAPI, WorkspaceEventCallback } from "..";
export * from "./common";
export * from "./events";
export * from "./ExtensionAPI";
export * from "./MarkupAPI";
export * from "./ModelsPanelAPI";
export * from "./ProjectAPI";
export * from "./UIAPI";
export * from "./UserAPI";
export * from "./ViewAPI";
export * from "./ViewerAPI";
export * from "./DataTableAPI";
/** The API set which can be used to interact with the Trimble Connect 3D Viewer workspace.  */
export interface WorkspaceAPI {
    /** The API to interact with the Trimble Connect data table */
    dataTable: DataTableAPI;
    /** The API to add and interact with Extensions */
    extension: ExtensionAPI;
    /** The API to add and interact with Trimble Connect Markups */
    markup: MarkupAPI;
    /** The API to interact with the Trimble Connect models panel */
    modelsPanel: ModelsPanelAPI;
    /** The API to interact with the Trimble Connect projects */
    project: ProjectAPI;
    /** The API to interact with the Trimble Connect 3D Viewer UI */
    ui: UIAPI;
    /** The API to interact with the Trimble Connect users */
    user: UserAPI;
    /** The API to interact with the Trimble Connect views */
    view: ViewAPI;
    /** The API to interact with the Trimble Connect 3D Viewer */
    viewer: ViewerAPI;
}
/**
 * Connects to the 3D Viewer application.
 * @param target The target dispatcher or the iframe hosting the 3D Viewer application.
 * @param onEvent The callback that receives the events dispatched from the 3D Viewer application.
 * @param timeout The optional timeout in milliseconds. If not specified default timeout is 10000ms
 * @returns A promise that resolves to the set of exposed external API from the 3D Viewer application.
 *          Use the exposed API to communicate with the 3D Viewer application.
 */
export declare function connect(target: Window | HTMLIFrameElement, onEvent?: WorkspaceEventCallback, timeout?: number): Promise<WorkspaceAPI>;
